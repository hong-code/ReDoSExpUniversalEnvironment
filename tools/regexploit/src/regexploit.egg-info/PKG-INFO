Metadata-Version: 2.1
Name: regexploit
Version: 1.0.0
Summary: Find regular expressions vulnerable to ReDoS
Home-page: https://github.com/doyensec/regexploit
Author: Ben Caller :: Doyensec
Author-email: REMOVETHISPREFIX.ben@doyensec.com
License: UNKNOWN
Description: # ReDoS regex attack string generate tools
        
        ## Files
        - `run.py` - Main entry point following project contract
        - `src/` - Source code directory containing regexploit Python package
        - `src/setup.py` - Python package configuration
        - `src/regexploit/` - Core regexploit library
        - `tests/` - Test scripts and test data
        - `tests/simple_test.sh` - Basic functionality tests
        - `Makefile` - Build and test automation
        
        ## Building and Running
        ### Build
        ```bash
        make all
        ```
        This will install the regexploit package from source.
        
        ### Run tests
        ```bash
        make test
        ```
        
        ## Program Usage
        The tool follows the standard project contract:
        
        **Arguments:**
        1. Base64 encoded regex pattern
        2. Output file path
        
        **Output:**
        JSON file with the following format:
        ```json
        {
          "elapsed_ms": "elapsed_ms",
          "is_redos": true or false,
          "prefix": "a base64 encoded prefix of attack string",
          "infix": "a base64 encoded infix of attack string", 
          "suffix": "a base64 encoded suffix of attack string",
          "repeat_times": "the repeat times of the infix in the attack string which recommended by the tool"
        }
        ```
        
        **Example:**
        ```bash
        # Test with known ReDoS pattern v\w*_\w*_\w*$
        python3 run.py "dl93Kl93Kl93KyQ=" output.json
        ```
        
        ## Directory Structure
        ```
        regexploit/
        ├── run.py                   # Main entry point
        ├── README.md               # This file
        ├── Makefile               # Build automation
        ├── src/                   # Source code
        │   ├── setup.py          # Python package setup
        │   ├── regexploit/       # Core library
        │   │   ├── __init__.py
        │   │   ├── redos.py      # Main ReDoS detection logic
        │   │   ├── ast/          # Abstract syntax tree handling
        │   │   ├── bin/          # Command line tools
        │   │   ├── languages/    # Language-specific parsers
        │   │   └── output/       # Output formatting
        │   └── test*.py          # Unit tests
        └── tests/                # Integration tests
            └── simple_test.sh    # Basic functionality test
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Provides-Extra: yaml
